@using Microsoft.AspNetCore.Components
@using PI.Models
@using PI.Handlers
@using PI.Services

@{
    Layout = "~/Views/Shared/LayoutPasosAnalisis.cshtml";
    String fechaAnalisis = ViewBag.fechaAnalisis.ToString("yyyy-MM-dd HH:mm:ss.fff");
    decimal metaDeVentasMensual = ViewBag.MetaDeVentasMensual;
    decimal inversionInicial = ViewBag.InversionInicial;
    bool estadoIniciado = ViewBag.Iniciado;
}


<head>
    @*<title>Análisis de rentabilidad</title>*@
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/FlujoDeCaja/flujoDeCajaStyles.css" />
    <link rel="stylesheet" href="~/css/FlujoDeCaja/tablas.css" />
</head>

<body>
    <div>
        @Html.Partial("LayoutNombreEmpresa")
    </div>

    <div class="container-xl">

        <div class="row fila-meta-inversion d-flex justify-content-center">

            @*Meta de mensual de ventas*@
            <div class="col-6 d-flex justify-content-center">
                <label>Meta mensual de ventas</label>
                <div class="dato-meta-inversion">
                    <span>
                        @FormatManager.ToFormatoEstadistico(metaDeVentasMensual)
                    </span>
                </div>
            </div>

            @*Inversion inicial*@
            @if (estadoIniciado == false)
            {
                <div class="col-6 d-flex justify-content-center">
                    <label>Inversion inicial</label>
                    <div class="dato-meta-inversion">
                        <span>
                            @FormatManager.ToFormatoEstadistico(inversionInicial)
                        </span>
                    </div>
                </div>
            }
        </div>

        <div id="contenedor-tabs" class="my-5">
            <nav>
                <div class="nav nav-tabs tabs-tablas" id="nav-tab" role="tablist">
                    <button class="nav-link active tab-flujo" id="nav-ingresos-tab" data-bs-toggle="tab"
                            data-bs-target="#ingresos" type="button" role="tab" aria-controls="nav-ingresos"
                            aria-selected="true">
                        Ingresos
                    </button>
                    <button class="nav-link tab-flujo mx-1" id="nav-egresos-tab" data-bs-toggle="tab"
                            data-bs-target="#egresos" type="button" role="tab" aria-controls="nav-egresos"
                            aria-selected="false">
                        Egresos
                    </button>
                </div>
            </nav>

            <div class="tab-content" id="nav-tabContent">
                <div class="tab-pane fade show active" id="ingresos" role="tabpanel" aria-labelledby="nav-ingresos-tab">
                    <div class="mt-4">
                        @(
                        await Html.RenderComponentAsync<PI.Views.Shared.Components.FlujoDeCaja.TablaIngresos>(RenderMode.ServerPrerendered, new { ingresos = ViewBag.Ingresos })
                        )
                    </div>
                </div>

                <div class="tab-pane fade" id="egresos" role="tabpanel" aria-labelledby="nav-egresos-tab">
                    <div class="mt-4">
                        @(
                            await Html.RenderComponentAsync<PI.Views.Shared.Components.FlujoDeCaja.TablaEgresos>(RenderMode.ServerPrerendered, 
                                new { egresos = ViewBag.Egresos, gastosFijos = ViewBag.GastosFijos, estadoIniciado, inversionInicial, meses = ViewBag.Meses })
                            )
                    </div>
                </div>
            </div>
        </div>

    </div>
</body>
