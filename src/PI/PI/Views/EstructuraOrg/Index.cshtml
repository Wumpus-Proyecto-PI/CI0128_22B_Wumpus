@*
    Html para la estructura orgranizativa.
    Como este es dinamico del lado del cliente se utilzan componentes razor
*@
@{
    Layout = "~/Views/Shared/LayoutPasosAnalisis.cshtml";
}

<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>HTML template</title>
    <link rel="stylesheet" href="css/est_org.css">
</head>

<div id="subtitulo">
    <div id="nombre_negocio">@ViewData["NombreNegocio"]</div>
</div>

<div id="contenido-puestos-pestañas">   
    <div class="altura-seccion" id="seccion-pestañas">
        @*Aqui se agrega lo de las pestanas*@
    </div>
    <div class="altura-seccion" id="seccion-puestos">
        @*Seccion de puestos donde se ven los puestos en cajas con organigrama*@


        @*<div id="agregar-primer-puesto">
            <a><img src="~/img/estructuraOrg/addPrimerPuesto.png"></a>
        </div>*@
        @(await Html.RenderComponentAsync<PI.Views.Shared.Components.SeccionPuestos>(RenderMode.ServerPrerendered))
    </div>

    @*<div id="pestañas">
        <a class="pestaña_cuadro_beneficios" href="#">
            <p>
                Configuración
            </p>
        </a>
        <a class="pestaña_cuadro_beneficios" href="#">
            <p>
                Beneficios
            </p>
        </a>
    </div>
    <div id="cuadro_beneficios">
    </div>*@
</div>


@*Necesario para componentes razor*@
<script src="_framework/blazor.server.js"><script/>
