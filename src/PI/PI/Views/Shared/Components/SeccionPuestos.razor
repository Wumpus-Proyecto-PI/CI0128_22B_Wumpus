@using PI.Models
@using PI.Handlers

<div id="mostrar-puestos">
    @foreach (PuestoModel puesto in puestos)
    {
        <PuestoParcialView puesto=puesto></PuestoParcialView>
    }
    @((MarkupString)htmlPuestosStr)
</div>


<div id="@cssId" @onmouseover="@Hover" @onmouseout="@HoverOut" @onclick="@AgregarPuesto">
    <a><img style="@styleHover" src=" @imgAgregarPath" alt="">@hoverText</a>
</div>

@code {
    [Parameter]
    public List<PuestoModel> puestos { get; set; }

    string imgAgregarPath = "img/estructuraOrg/addPuesto.png";
    string hoverText = "";
    string styleHover = "";
    string cssId = "agregar-puesto";
    bool primerPuestoAgreado = false;
    string htmlPuestosStr = "";


    public void Hover(MouseEventArgs mouseEvent)
    {
        cssId = "agregar-puesto-hover";
        imgAgregarPath = "";
        hoverText = "Agregar Puesto";
    }
    public void HoverOut(MouseEventArgs mouseEvent)
    {
        styleHover = "";
        cssId = "agregar-puesto";
        imgAgregarPath = "img/estructuraOrg/addPuesto.png";
        hoverText = "";
    }

    public void AgregarPuesto(MouseEventArgs mouseEvent)
    {
        primerPuestoAgreado = true;
        htmlPuestosStr += "<p>Som text</p><PuestoParcialView puesto=\"@test\"></PuestoParcialView>";
        var html = Markdig.Markdown.ToHtml(htmlPuestosStr);
    }
}

