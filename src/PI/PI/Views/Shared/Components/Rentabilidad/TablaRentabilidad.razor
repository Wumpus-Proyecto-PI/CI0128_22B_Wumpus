@using PI.Handlers
@using PI.Models


    <div class="container text-center mt-5">

            <div id="container-forms-top">
        <form class="d-flex flex-row align-items-center justify-content-start">
            <div class="form-row">
                <div class="col col-xs-5">
                    <input type="number" class="form-control" placeholder=@analisis.gananciaMensual @bind="analisis.gananciaMensual">
                </div>
                <div class="col col-xs-5">
                    <input type="text" class="form-control" placeholder=@montoGastosFijos readonly>
                </div>
            <button type="button" class="btn btn-primary" @onclick="actualizarGananciaMensual">Guardar</button>
            </div>
        </form>
    </div>

        <ul class="responsive-table">
            <li class="table-header">
                <div class="col col-1">
                    <p class="datos-calculados">Nombre de producto</p>
                </div>
                <div class="col col-1">
                    <p class="datos-calculados">Porcentaje de Ventas</p>
                </div>
                <div class="col col-1">
                    <p class="datos-calculados">Precio</p>
                </div>
                <div class="col col-1">
                    <p class="datos-calculados">Margen</p>
                </div>
                <div class="col col-1">
                    <p class="datos-calculados">Punto Equilibrio</p>
                </div>
                <div class="col col-1">
                    <p class="datos-calculados">Meta de ventas</p>
                </div>
            </li>

            <li class="table-row-totales">
                <div class="col col-1" data-label="Nombre">
                    <p class="datos-calculados texto-nombres">Totales</p>
                </div>
                <div class="col col-1" data-label="% Ventas">
                    100%
                </div>
                <div class="col col-1" data-label="Precio">
                    -
                </div>
                <div class="col col-1" data-label="Margen">
                    -
                </div>
                <div class="col col-1" data-label="Punto Eq">
                    9,220.00
                </div>
                <div class="col col-1" data-label="Meta">
                    234
                </div>
            </li>

            @foreach (var productoActual in productos)
            {
            <li class="table-row">
                <div class="col col-1" data-label="Nombre">
                    <p class="datos-calculados texto-nombres">@productoActual.Nombre</p>
                </div>
                <div class="col col-1" data-label="% Ventas">
                    <input class="effect-1 text-center" type="number" @bind="productoActual.PorcentajeVentas" @onfocusout="() => actualizarPorcentajeVentas(productoActual)">
                    <span class="focus-border"></span>
                </div>
                <div class="col col-1" data-label="Precio">
                    <input class="effect-1 text-center" type="number" @bind="productoActual.Precio" @onfocusout="() => actualizarPrecio(productoActual)">
                    <span class="focus-border"></span>
                </div>
                <div class="col col-1" data-label="Margen">
                    <p class="datos-calculados">@porcentajeVentasMargen</p>
                </div>
                <div class="col col-1" data-label="Punto Eq">
                    <p class="datos-calculados"></p>
                </div>
                <div class="col col-1" data-label="Meta">
                    <p class="datos-calculados">@productoActual.PorcentajeVentas.ToString()</p>
                </div>
            </li>
        }
    </ul>
</div>

@code {
    [Parameter]
    public List<ProductoModel> productos { get; set; }

    [Parameter]
    public AnalisisModel analisis { get; set; }

    [Parameter]
    public decimal montoGastosFijos { get; set; }


    public ProductoHandler productoHandler = new ProductoHandler();

    public void actualizarGananciaMensual () {
        AnalisisHandler handler = new AnalisisHandler();
        handler.ActualizarGananciaMensual(analisis.gananciaMensual, analisis.FechaCreacion);
    }

    public string porcentajeVentasMargen = "20";

    public void actualizarPorcentajeVentas(ProductoModel producto) 
    {
        productoHandler.actualizarPorcentajeVentas(producto, producto.FechaAnalisis);
    }

    public void actualizarPrecio(ProductoModel producto)
    {
        productoHandler.actualizarPrecio(producto, producto.FechaAnalisis);
    }
}