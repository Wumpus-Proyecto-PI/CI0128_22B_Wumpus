@using PI.EntityHandlers
@using PI.EntityModels
@using PI.Services
@using BlazorCleave
@using BlazorCleave.Data
@using System.Globalization
@using PI.Views.Shared.Components.FlujoDeCaja
@inject FlujoCajaService FlujoCajaService;

<div id="contenedor-tabs" class="my-5">
    <nav>
        <div class="nav nav-tabs tabs-tablas" id="nav-tab" role="tablist">
            <button class="nav-link active tab-flujo" id="nav-ingresos-tab" data-bs-toggle="tab"
                    data-bs-target="#ingresos" type="button" role="tab" aria-controls="nav-ingresos"
                    aria-selected="true" @onclick="async() => await ActualizarFlujoMensualAsync()">
                Ingresos
            </button>
            <button class="nav-link tab-flujo mx-1" id="nav-egresos-tab" data-bs-toggle="tab"
                    data-bs-target="#egresos" type="button" role="tab" aria-controls="nav-egresos"
                    aria-selected="false" @onclick="async() => await ActualizarFlujoMensualAsync()">
                Egresos
            </button>
        </div>
    </nav>

    <div class="tab-content" id="nav-tabContent">
        <div class="tab-pane fade show active" id="ingresos" role="tabpanel" aria-labelledby="nav-ingresos-tab">
            <div class="mt-4">
                <TablaIngresos Ingresos=ingresos Meses=meses FlujoMensual=flujoMensual />

            </div>
        </div>

        <div class="tab-pane fade" id="egresos" role="tabpanel" aria-labelledby="nav-egresos-tab">
            <div class="mt-4">
                <TablaEgresos gastosFijos=gastosFijos egresos=egresos estadoIniciado=estadoIniciado inversionInicial=inversionInicial meses=meses flujoMensual=flujoMensual />
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter]
    public List<GastoFijo> gastosFijos { get; set; }

    [Parameter]
    public List<Egreso> egresos { get; set; }

    [Parameter]
    public List<Ingreso> ingresos { get; set; }

    [Parameter]
    public bool estadoIniciado { get; set; }

    [Parameter]
    public decimal inversionInicial { get; set; }

    [Parameter]
    public List<Mes> meses { get; set; }

    [Parameter]
    public List<string> flujoMensual { get; set; }

    public async Task ActualizarFlujoMensualAsync(){
        await FlujoCajaService.ActualizarFlujoMensualAsync(meses, flujoMensual);
    }

    protected override async Task OnInitializedAsync()
    {
        await ActualizarFlujoMensualAsync();
    }
}
