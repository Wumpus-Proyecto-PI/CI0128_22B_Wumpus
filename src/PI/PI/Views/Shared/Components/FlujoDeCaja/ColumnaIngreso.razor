@using PI.Models
@using PI.Handlers;
@using PI.Services;

<div class="col col-1">
    @if (ingresoActual.estadoInput)
    {
        <div class="div-datos w-100 h-100 text-center" @onmouseover="() => {ingresoActual.estadoInput = false;}">
            <p>
                @FormatManager.ToFormatoEstadistico(ingresoActual.Monto)
            </p>
        </div>
    }
    else
    {
        <input class="effect-1 text-center"
           type="text" maxlength=16
           @onfocusout="() => {ingresoActual.estadoInput = true; actualizarIngreso(ingresoActual);}"
           @bind="ingresoActual.Monto">
        <span class="focus-border"></span>
    }
</div>

@code {

    [Parameter]
    public IngresoModel ingresoActual { get; set; }

    public FlujoDeCajaHandler flujoDeCajaHandler = new FlujoDeCajaHandler();

    public void actualizarIngreso(IngresoModel ingreso)
    {
        flujoDeCajaHandler.actualizarIngreso(ingreso);
    }
}
